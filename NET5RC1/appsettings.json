{
    "ConnectionStrings": {
        "DefaultConnection": "Server=(localdb)\\mssqllocaldb;Database=NET5RC1DB;Trusted_Connection=True;MultipleActiveResultSets=true"
    },
    "Logging": {
        "LogLevel": {
            "Default": "Information",
            "Microsoft": "Warning",
            "Microsoft.Hosting.Lifetime": "Information"
        }
    },
    "AllowedHosts": "*"

    // Kestrel endpoint-specific options via configuration
    // We have added support for configuring Kestrel’s endpoint-specific options via configuration. The endpoint-specific configurations includes the Http protocols used, the TLS protocols used, the certificate selected, and the client certificate mode.
    // You are able to configure the which certificate is selected based on the specified server name as part of the Server Name Indication (SNI) extension to the TLS protocol as indicated by the client. Kestrel’s configuration also support a wildcard prefix in the host name.
    // The example belows shows you how to specify endpoint-specific using a configuration file:
    //"Kestrel": {
    //    "Endpoints": {
    //        "EndpointName": {
    //            "Url": "https://*",
    //            "Sni": {
    //                "a.example.org": {
    //                    "Protocols": "Http1AndHttp2",
    //                    "SslProtocols": [ "Tls11", "Tls12" ],
    //                    "Certificate": {
    //                        "Path": "testCert.pfx",
    //                        "Password": "testPassword"
    //                    },
    //                    "ClientCertificateMode": "NoCertificate"
    //                },
    //                "*.example.org": {
    //                    "Certificate": {
    //                        "Path": "testCert2.pfx",
    //                        "Password": "testPassword"
    //                    }
    //                },
    //                "*": {
    //                    // At least one subproperty needs to exist per SNI section or it
    //                    // cannot be discovered via IConfiguration
    //                    "Protocols": "Http1"
    //                }
    //            }
    //        }
    //    }
    //}
}
